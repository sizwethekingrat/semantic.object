{"version":3,"file":"3.js","sources":["webpack:///node_modules/reselect/lib/index.js","webpack:///src/actions/shop.js","webpack:///./src/assets/images/live/diesel-300x300.png","webpack:///./src/assets/images/live/petrol-300x300.png","webpack:///src/components/button-shared-styles.js","webpack:///src/components/my-view3.js","webpack:///src/components/page-view-element.js","webpack:///src/components/shared-styles.js","webpack:///src/components/shop-cart.js","webpack:///src/components/shop-item.js","webpack:///src/components/shop-products.js","webpack:///src/reducers/shop.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS';\n\nexport const CHECKOUT_FAILURE = 'CHECKOUT_FAILURE';\n\nconst petrol = 'petrol';\nconst diesel = 'diesel';\n\nexport const petrolIcon = require('../assets/images/live/petrol-300x300.png?{\"outputs\":[\"thumbnail\"]}');\n\nexport const dieselIcon = require('../assets/images/live/diesel-300x300.png?{\"outputs\":[\"thumbnail\"]}');\n\nconst PRODUCT_LIST = [\n  {\"id\": 1, \"title\": petrol, \"icon\": petrolIcon, \"price\": 50, \"inventory\": 10},\n  {\"id\": 2, \"title\": diesel, \"icon\": dieselIcon, \"price\": 50, \"inventory\": 1000}\n];\n\nexport const getAllProducts = () => (dispatch, getState) => {\n  // Here you would normally get the data from the server. We're simulating\n  // that by dispatching an async action (that you would dispatch when you\n  // succesfully got the data back)\n\n    console.log(petrolIcon[0].format); // 'image/jpeg'\n    console.log(petrolIcon[0].url); // url to image\n    console.log(petrolIcon[0].name);\n\n    console.log(dieselIcon[0].format); // 'image/jpeg'\n    console.log(dieselIcon[0].url); // url to image\n    console.log(petrolIcon[0].name);\n\n    // You could reformat the data in the right format as well:\n  const products = PRODUCT_LIST.reduce((obj, product) => {\n    obj[product.id] = product\n    return obj\n  }, {});\n\n  dispatch({\n    type: GET_PRODUCTS,\n    products: products\n  });\n};\n\nexport const checkout = (productId) => (dispatch) => {\n  // Here you could do things like credit card validation, etc.\n  // If that fails, dispatch CHECKOUT_FAILURE. We're simulating that\n  // by flipping a coin :)\n  const flip = Math.floor(Math.random() * 2);\n  if (flip === 0) {\n    dispatch({\n      type: CHECKOUT_FAILURE\n    });\n  } else {\n    dispatch({\n      type: CHECKOUT_SUCCESS\n    });\n  }\n};\n\nexport const addToCart = (productId) => (dispatch, getState) =>{\n  const state = getState();\n  // Just because the UI thinks you can add this to the cart\n  // doesn't mean it's in the inventory (user could've fixed it);\n  if (state.shop.products[productId].inventory > 0) {\n    dispatch(addToCartUnsafe(productId));\n  }\n};\n\nexport const removeFromCart = (productId) => {\n  return {\n    type: REMOVE_FROM_CART,\n    productId\n  };\n};\n\nexport const addToCartUnsafe = (productId) => {\n  return {\n    type: ADD_TO_CART,\n    productId\n  };\n};\n","module.exports = [{\"name\": \"diesel-300x300.png\",\"width\": 50,\"format\": \"png\",\"preset\": \"thumbnail\",\"height\": 50,\"type\": \"image\\u002Fpng\",\"url\": __webpack_public_path__ + \"diesel-300x300.png\"}];","module.exports = [{\"name\": \"petrol-300x300.png\",\"width\": 50,\"format\": \"png\",\"preset\": \"thumbnail\",\"height\": 50,\"type\": \"image\\u002Fpng\",\"url\": __webpack_public_path__ + \"petrol-300x300.png\"}];","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { html } from '@polymer/lit-element';\n\nexport const ButtonSharedStyles = html`\n<style>\n  button {\n    font-size: inherit;\n    vertical-align: middle;\n    background: transparent;\n    border: none;\n    cursor: pointer;\n  }\n  button:hover svg {\n    fill: var(--app-primary-color);\n  }\n</style>\n`;\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { html } from '@polymer/lit-element';\nimport { PageViewElement } from './page-view-element.js';\nimport { connect } from 'pwa-helpers/connect-mixin.js';\n\n// This element is connected to the Redux store.\nimport { store } from '../store.js';\n\n// These are the actions needed by this element.\nimport { checkout } from '../actions/shop.js';\n\n// We are lazy loading its reducer.\nimport shop, { cartQuantitySelector } from '../reducers/shop.js';\nstore.addReducers({\n  shop\n});\n\n// These are the elements needed by this element.\nimport './shop-products.js';\nimport './shop-cart.js';\n\n// These are the shared styles needed by this element.\nimport { SharedStyles } from './shared-styles.js';\nimport { ButtonSharedStyles } from './button-shared-styles.js';\n\nclass MyView3 extends connect(store)(PageViewElement) {\n  _render({_quantity, _error}) {\n    return html`\n      ${SharedStyles}\n      ${ButtonSharedStyles}\n      <style>\n        /* Add more specificity (.checkout) to workaround an issue in lit-element:\n           https://github.com/PolymerLabs/lit-element/issues/34 */\n        button.checkout {\n          border: 2px solid var(--app-dark-text-color);\n          border-radius: 3px;\n          padding: 8px 16px;\n        }\n        button.checkout:hover {\n          border-color: var(--app-primary-color);\n          color: var(--app-primary-color);\n        }\n      </style>\n\n      <section>\n        <h2>Redux example: shopping cart</h2>\n        <div class=\"circle\">${_quantity}</div>\n\n        <p>This is a slightly more advanced Redux example, that simulates a\n          shopping cart: getting the products, adding/removing items to the\n          cart, and a checkout action, that can sometimes randomly fail (to\n          simulate where you would add failure handling). </p>\n        <p>This view, as well as its 2 child elements, <code>&lt;shop-products&gt;</code> and\n        <code>&lt;shop-cart&gt;</code> are connected to the Redux store.</p>\n      </section>\n      <section>\n        <h3>Products</h3>\n        <shop-products></shop-products>\n\n        <br>\n        <h3>Your Cart</h3>\n        <shop-cart></shop-cart>\n\n        <div>${_error}</div>\n        <br>\n        <p>\n          <button class=\"checkout\" hidden=\"${_quantity == 0}\"\n              on-click=\"${() => store.dispatch(checkout())}\">\n            Checkout\n          </button>\n        </p>\n      </section>\n    `;\n  }\n\n  static get properties() { return {\n    // This is the data from the store.\n    _quantity: Number,\n    _error: String\n  }}\n\n  // This is called every time something is updated in the store.\n  _stateChanged(state) {\n    this._quantity = cartQuantitySelector(state);\n    this._error = state.shop.error;\n  }\n}\n\nwindow.customElements.define('my-view3', MyView3);\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { LitElement } from '@polymer/lit-element';\n\nexport class PageViewElement extends LitElement {\n  // Only render this page if it's actually visible.\n  _shouldRender(props, changedProps, old) {\n    return props.active;\n  }\n\n  static get properties() {\n    return {\n      active: Boolean\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { html } from '@polymer/lit-element';\n\nexport const SharedStyles = html`\n<style>\n  :host {\n    display: block;\n    box-sizing: border-box;\n  }\n\n  section {\n    padding: 24px;\n    background: var(--app-section-odd-color);\n  }\n\n  section > * {\n    max-width: 600px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  section:nth-of-type(even) {\n    background: var(--app-section-even-color);\n  }\n\n  h2 {\n    font-size: 24px;\n    text-align: center;\n    color: var(--app-dark-text-color);\n  }\n\n  @media (min-width: 460px) {\n    h2 {\n      font-size: 36px;\n    }\n  }\n\n  .circle {\n    display: block;\n    width: 64px;\n    height: 64px;\n    margin: 0 auto;\n    text-align: center;\n    border-radius: 50%;\n    background: var(--app-primary-color);\n    color: var(--app-light-text-color);\n    font-size: 30px;\n    line-height: 64px;\n  }\n</style>\n`;\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { LitElement, html } from '@polymer/lit-element';\nimport { connect } from 'pwa-helpers/connect-mixin.js';\n\n// This element is connected to the Redux store.\nimport { store } from '../store.js';\n\n// These are the elements needed by this element.\nimport { removeFromCartIcon } from './my-icons.js';\nimport './shop-item.js';\n\n// These are the actions needed by this element.\nimport { removeFromCart } from '../actions/shop.js';\n\n// These are the reducers needed by this element.\nimport { cartItemsSelector, cartTotalSelector } from '../reducers/shop.js';\n\n// These are the shared styles needed by this element.\nimport { ButtonSharedStyles } from './button-shared-styles.js';\n\nclass ShopCart extends connect(store)(LitElement) {\n  _render({_items, _total}) {\n    return html`\n      ${ButtonSharedStyles}\n      <style>\n        :host { display: block; }\n      </style>\n      <p hidden=\"${_items.length !== 0}\">Please add some products to cart.</p>\n      ${_items.map((item) =>\n        html`\n          <div>\n            <shop-item name=\"${item.title}\" amount=\"${item.amount}\" price=\"${item.price}\"></shop-item>\n            <button\n                on-click=\"${(e) => store.dispatch(removeFromCart(e.currentTarget.dataset['index']))}\"\n                data-index$=\"${item.id}\"\n                title=\"Remove from cart\">\n              ${removeFromCartIcon}\n            </button>\n          </div>\n        `\n      )}\n      <p hidden=\"${!_items.length}\"><b>Total:</b> ${_total}</p>\n    `;\n  }\n\n  static get properties() { return {\n    _items: Array,\n    _total: Number\n  }}\n\n  // This is called every time something is updated in the store.\n  _stateChanged(state) {\n    this._items = cartItemsSelector(state);\n    this._total = cartTotalSelector(state);\n  }\n}\n\nwindow.customElements.define('shop-cart', ShopCart);\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { LitElement, html } from '@polymer/lit-element';\n\n// This element is *not* connected to the Redux store.\nclass ShopItem extends LitElement {\n  _render(props) {\n    return html`\n      ${props.name}:\n      <span hidden=\"${props.amount === 0}\">${props.amount} * </span>\n      $${props.price}\n      </span>\n    `;\n  }\n\n  static get properties() {\n    return {\n      name: String,\n      amount: String,\n      price: String\n    }\n  }\n}\n\nwindow.customElements.define('shop-item', ShopItem);\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { LitElement, html } from '@polymer/lit-element';\nimport { connect } from 'pwa-helpers/connect-mixin.js';\n\n// This element is connected to the Redux store.\nimport { store } from '../store.js';\n\n\n// These are the actions needed by this element.\nimport { getAllProducts, addToCart } from '../actions/shop.js';\n\n// These are the elements needed by this element.\nimport { addToCartIcon } from './my-icons.js';\n\n// These are the shared styles needed by this element.\nimport { ButtonSharedStyles } from './button-shared-styles.js';\n\nclass ShopProducts extends connect(store)(LitElement) {\n  _render({_products}) {\n    return html`\n      ${ButtonSharedStyles}\n      <style>\n        :host { display: block; }\n      </style>\n      ${Object.keys(_products).map((key) => {\n        const item = _products[key];\n        this.img = item.icon[0];\n        return html`\n          <div>\n            <shop-item name=\"${item.title}\" amount=\"${item.inventory}\" price=\"${item.price}\"></shop-item>\n            <button\n                disabled=\"${item.inventory === 0}\"\n                on-click=\"${(e) => store.dispatch(addToCart(e.currentTarget.dataset['index']))}\"\n                data-index$=\"${item.id}\"\n                title=\"${item.inventory === 0 ? 'Sold out' : 'Add to cart' }\"       \n                > \n              <!--<img src.bind=\"img\">-->\n              <img src=\"${item.icon[0].url}\">\n            </button>\n          </div>\n        `\n      })}\n    `;\n  }\n\n  static get properties() { return {\n    _products: Object\n  }}\n\n  _firstRendered() {\n    store.dispatch(getAllProducts());\n  }\n\n  // This is called every time something is updated in the store.\n  _stateChanged(state) {\n    this._products = state.shop.products;\n  }\n}\n\nwindow.customElements.define('shop-products', ShopProducts);\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { GET_PRODUCTS, ADD_TO_CART, REMOVE_FROM_CART, CHECKOUT_SUCCESS, CHECKOUT_FAILURE } from '../actions/shop.js';\nimport { createSelector } from 'reselect';\n\nconst INITIAL_CART = {\n  addedIds: [],\n  quantityById: {}\n};\n\nconst UPDATED_CART = {\n  addedIds: ['1'],\n  quantityById: { '1': 1 }\n};\n\nconst shop = (state = { products: {}, cart: INITIAL_CART }, action) => {\n  switch (action.type) {\n    case GET_PRODUCTS:\n      return _extends({}, state, {\n        products: action.products\n      });\n    case ADD_TO_CART:\n    case REMOVE_FROM_CART:\n    case CHECKOUT_SUCCESS:\n      return _extends({}, state, {\n        products: products(state.products, action),\n        cart: cart(state.cart, action),\n        error: ''\n      });\n    case CHECKOUT_FAILURE:\n      return _extends({}, state, {\n        error: 'Checkout failed. Please try again'\n      });\n    default:\n      return state;\n  }\n};\n\n// Slice reducer: it only reduces the bit of the state it's concerned about.\nconst products = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n    case REMOVE_FROM_CART:\n      const productId = action.productId;\n      return _extends({}, state, {\n        [productId]: product(state[productId], action)\n      });\n    default:\n      return state;\n  }\n};\n\nconst product = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return _extends({}, state, {\n        inventory: state.inventory - 1\n      });\n    case REMOVE_FROM_CART:\n      return _extends({}, state, {\n        inventory: state.inventory + 1\n      });\n    default:\n      return state;\n  }\n};\n\nconst cart = (state = INITIAL_CART, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n    case REMOVE_FROM_CART:\n      return {\n        addedIds: addedIds(state.addedIds, state.quantityById, action),\n        quantityById: quantityById(state.quantityById, action)\n      };\n    case CHECKOUT_SUCCESS:\n      return INITIAL_CART;\n    default:\n      return state;\n  }\n};\n\nconst addedIds = (state = INITIAL_CART.addedIds, quantityById, action) => {\n  const productId = action.productId;\n  switch (action.type) {\n    case ADD_TO_CART:\n      if (state.indexOf(productId) !== -1) {\n        return state;\n      }\n      return [...state, action.productId];\n    case REMOVE_FROM_CART:\n      // This is called before the state is updated, so if you have 1 item in the\n      // cart during the remove action, you'll have 0.\n      if (quantityById[productId] <= 1) {\n        // This removes all items in this array equal to productId.\n        return state.filter(e => e !== productId);\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n\nconst quantityById = (state = INITIAL_CART.quantityById, action) => {\n  const productId = action.productId;\n  switch (action.type) {\n    case ADD_TO_CART:\n      return _extends({}, state, {\n        [productId]: (state[productId] || 0) + 1\n      });\n    case REMOVE_FROM_CART:\n      return _extends({}, state, {\n        [productId]: (state[productId] || 0) - 1\n      });\n    default:\n      return state;\n  }\n};\n\nexport default shop;\n\n// Per Redux best practices, the shop data in our store is structured\n// for efficiency (small size and fast updates).\n//\n// The _selectors_ below transform store data into specific forms that\n// are tailored for presentation. Putting this logic here keeps the\n// layers of our app loosely coupled and easier to maintain, since\n// views don't need to know about the store's internal data structures.\n//\n// We use a tiny library called `reselect` to create efficient\n// selectors. More info: https://github.com/reduxjs/reselect.\n\nconst cartSelector = state => state.shop.cart;\nconst productsSelector = state => state.shop.products;\n\n// Return a flattened array representation of the items in the cart\nexport const cartItemsSelector = createSelector(cartSelector, productsSelector, (cart, products) => {\n  const items = [];\n  for (let id of cart.addedIds) {\n    const item = products[id];\n    items.push({ id: item.id, title: item.title, amount: cart.quantityById[id], price: item.price });\n  }\n  return items;\n});\n\n// Return the total cost of the items in the cart\nexport const cartTotalSelector = createSelector(cartSelector, productsSelector, (cart, products) => {\n  let total = 0;\n  for (let id of cart.addedIds) {\n    const item = products[id];\n    total += item.price * cart.quantityById[id];\n  }\n  return parseFloat(Math.round(total * 100) / 100).toFixed(2);\n});\n\n// Return the number of items in the cart\nexport const cartQuantitySelector = createSelector(cartSelector, cart => {\n  let num = 0;\n  for (let id of cart.addedIds) {\n    num += cart.quantityById[id];\n  }\n  return num;\n});\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC5HA;;;;;;;;;AAUA;;AACA;;AACA;;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAvBA;AACA;;;AAwBA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AAdA;AACA;;;AAeA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAPA;AACA;;;AAQA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;;;;;;;;;AC5FA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYA;;;;;;;;;;;;;;;;;ACSA;AACA;;;;;;;;;;;AAAA;AACA;AADA;AACA;AACA;AAUA;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AAwCA;AAAA;AAMA;;;AAQA;AACA;AACA;AACA;AACA;;;AAVA;AAAA;AACA;AACA;AACA;AAHA;AAIA;;;AAtDA;AACA;AA8DA;;;;;;;;;;;;;;;;;;;;;ACjGA;;;;;;;;;AAYA;;;;;;;;;;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAVA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBA;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AAMA;AAKA;AAAA;AALA;AAeA;;;AAOA;AACA;AACA;AACA;AACA;;;AATA;AAAA;AACA;AACA;AAFA;AAGA;;;AA5BA;AACA;AAoCA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;;;;;;;;;;;;AACA;AACA;AAMA;;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAhBA;AACA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;;;;;;;;;;;;AACA;AAAA;AACA;AADA;AACA;AAMA;AACA;AACA;AAKA;AAAA;AASA;AAEA;;;AAMA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAXA;AAAA;AACA;AADA;AAEA;;;AA9BA;AACA;AAyCA;;;;;;;;;;;;;;;;;;;;;ACpEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;;;;;;;;;;;AAaA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AADA;AACA;AAEA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAVA;AAYA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAVA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAfA;AAiBA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAVA;AAYA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;;AAEA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;;AAEA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;;;;;;;A","sourceRoot":""}