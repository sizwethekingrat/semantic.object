{"version":3,"file":"0.js","sources":["webpack:///src/actions/login.js"],"sourcesContent":["var oktaSignIn = new OktaSignIn({\n    baseUrl: \"https://dev-408912.oktapreview.com\",\n    clientId: \"0oafs2pqyji6OyBUw0h7\",\n    authParams: {\n        issuer: \"https://dev-408912.oktapreview.com/oauth2/default\",\n        responseType: ['token', 'id_token'],\n        display: 'page'\n    }\n});\nif (oktaSignIn.token.hasTokensInUrl()) {\n    oktaSignIn.token.parseTokensFromUrl(\n        function success(res) {\n            // The tokens are returned in the order requested by `responseType` above\n            var accessToken = res[0];\n            var idToken = res[1]\n\n            // Say hello to the person who just signed in:\n            console.log('Hello, ' + idToken.claims.email);\n\n            // Save the tokens for later use, e.g. if the page gets refreshed:\n            oktaSignIn.tokenManager.add('accessToken', accessToken);\n            oktaSignIn.tokenManager.add('idToken', idToken);\n\n            // Remove the tokens from the window location hash\n            window.location.hash='';\n        },\n        function error(err) {\n            // handle errors as needed\n            console.error(err);\n        }\n    );\n} else {\n    oktaSignIn.session.get(function (res) {\n        // Session exists, show logged in state.\n        if (res.status === 'ACTIVE') {\n            console.log('Welcome back, ' + res.login);\n            return;\n        }\n        // No session, show the login form\n        oktaSignIn.renderEl(\n            { el: '#okta-login-container' },\n            function success(res) {\n                // Nothing to do in this case, the widget will automatically redirect\n                // the user to Okta for authentication, then back to this page if successful\n            },\n            function error(err) {\n                // handle errors as needed\n                console.error(err);\n            }\n        );\n    });\n}"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;A","sourceRoot":""}