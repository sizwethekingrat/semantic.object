{"version":3,"file":"2.js","sources":["webpack:///src/actions/counter.js","webpack:///src/components/button-shared-styles.js","webpack:///src/components/counter-element.js","webpack:///src/components/my-view2.js","webpack:///src/components/page-view-element.js","webpack:///src/components/shared-styles.js","webpack:///src/reducers/counter.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\n\nexport const increment = () => {\n  return {\n    type: INCREMENT\n  };\n};\n\nexport const decrement = () => {\n  return {\n    type: DECREMENT\n  };\n};\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { html } from '@polymer/lit-element';\n\nexport const ButtonSharedStyles = html`\n<style>\n  button {\n    font-size: inherit;\n    vertical-align: middle;\n    background: transparent;\n    border: none;\n    cursor: pointer;\n  }\n  button:hover svg {\n    fill: var(--app-primary-color);\n  }\n</style>\n`;\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { LitElement, html } from '@polymer/lit-element';\n\n// These are the elements needed by this element.\nimport { plusIcon, minusIcon } from './my-icons.js';\n\n// These are the shared styles needed by this element.\nimport { ButtonSharedStyles } from './button-shared-styles.js';\n\n// This is a reusable element. It is not connected to the store. You can\n// imagine that it could just as well be a third-party element that you\n// got from someone else.\nclass CounterElement extends LitElement {\n  _render(props) {\n    return html`\n      ${ButtonSharedStyles}\n      <style>\n        span { width: 20px; display: inline-block; text-align: center; font-weight: bold;}\n      </style>\n      <div>\n        <p>\n          Clicked: <span>${props.clicks}</span> times.\n          Value is <span>${props.value}</span>.\n          <button on-click=\"${() => this._onIncrement()}\" title=\"Add 1\">${plusIcon}</button>\n          <button on-click=\"${() => this._onDecrement()}\" title=\"Minus 1\">${minusIcon}</button>\n        </p>\n      </div>\n    `;\n  }\n\n  static get properties() { return {\n    /* The total number of clicks you've done. */\n    clicks: Number,\n    /* The current value of the counter. */\n    value: Number\n  }};\n\n  constructor() {\n    super();\n    this.clicks = 0;\n    this.value = 0;\n  }\n\n  _onIncrement() {\n    this.value++;\n    this.clicks++;\n    this.dispatchEvent(new CustomEvent('counter-incremented'));\n  }\n\n  _onDecrement() {\n    this.value--;\n    this.clicks++;\n    this.dispatchEvent(new CustomEvent('counter-decremented'));\n  }\n}\n\nwindow.customElements.define('counter-element', CounterElement);\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { html } from '@polymer/lit-element';\nimport { PageViewElement } from './page-view-element.js';\nimport { connect } from 'pwa-helpers/connect-mixin.js';\n\n// This element is connected to the Redux store.\nimport { store } from '../store.js';\n\n// These are the actions needed by this element.\nimport { increment, decrement } from '../actions/counter.js';\n\n// We are lazy loading its reducer.\nimport counter from '../reducers/counter.js';\nstore.addReducers({\n  counter\n});\n\n// These are the elements needed by this element.\nimport './counter-element.js';\n\n// These are the shared styles needed by this element.\nimport { SharedStyles } from './shared-styles.js';\n\nclass MyView2 extends connect(store)(PageViewElement) {\n  _render(props) {\n    return html`\n      ${SharedStyles}\n      <section>\n        <h2>Redux example: simple counter</h2>\n        <div class=\"circle\">${props._value}</div>\n        <p>This page contains a reusable <code>&lt;counter-element&gt;</code>. The\n        element is not built in a Redux-y way (you can think of it as being a\n        third-party element you got from someone else), but this page is connected to the\n        Redux store. When the element updates its counter, this page updates the values\n        in the Redux store, and you can see the current value of the counter reflected in\n        the bubble above.</p>\n        <br><br>\n      </section>\n      <section>\n        <p>\n          <counter-element value=\"${props._value}\" clicks=\"${props._clicks}\"\n              on-counter-incremented=\"${() => store.dispatch(increment())}\"\n              on-counter-decremented=\"${() => store.dispatch(decrement())}\">\n          </counter-element>\n        </p>\n      </section>\n    `;\n  }\n\n  static get properties() { return {\n    // This is the data from the store.\n    _clicks: Number,\n    _value: Number\n  }}\n\n  // This is called every time something is updated in the store.\n  _stateChanged(state) {\n    this._clicks = state.counter.clicks;\n    this._value = state.counter.value;\n  }\n}\n\nwindow.customElements.define('my-view2', MyView2);\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { LitElement } from '@polymer/lit-element';\n\nexport class PageViewElement extends LitElement {\n  // Only render this page if it's actually visible.\n  _shouldRender(props, changedProps, old) {\n    return props.active;\n  }\n\n  static get properties() {\n    return {\n      active: Boolean\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { html } from '@polymer/lit-element';\n\nexport const SharedStyles = html`\n<style>\n  :host {\n    display: block;\n    box-sizing: border-box;\n  }\n\n  section {\n    padding: 24px;\n    background: var(--app-section-odd-color);\n  }\n\n  section > * {\n    max-width: 600px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  section:nth-of-type(even) {\n    background: var(--app-section-even-color);\n  }\n\n  h2 {\n    font-size: 24px;\n    text-align: center;\n    color: var(--app-dark-text-color);\n  }\n\n  @media (min-width: 460px) {\n    h2 {\n      font-size: 36px;\n    }\n  }\n\n  .circle {\n    display: block;\n    width: 64px;\n    height: 64px;\n    margin: 0 auto;\n    text-align: center;\n    border-radius: 50%;\n    background: var(--app-primary-color);\n    color: var(--app-light-text-color);\n    font-size: 30px;\n    line-height: 64px;\n  }\n</style>\n`;\n","/**\n@license\nCopyright (c) 2018 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { INCREMENT, DECREMENT } from '../actions/counter.js';\n\nconst counter = (state = {clicks: 0, value: 0}, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        'clicks': state.clicks + 1,\n        'value': state.value + 1\n      };\n    case DECREMENT:\n      return {\n        'clicks': state.clicks + 1,\n        'value': state.value - 1\n      };\n    default:\n      return state;\n  }\n};\n\nexport default counter;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;AAUA;;AACA;;;AAEA;AACA;AACA;AADA;AAGA;AACA;;;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AASA;AAAA;AACA;AAAA;AAIA;;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAJA;AAKA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAzCA;AACA;AA2CA;;;;;;;;;;;;;;;;AC5CA;AACA;;;;;;;;;;;AAAA;AACA;AADA;AACA;AACA;AAQA;;;;;;;;;;;;AACA;AACA;AAgBA;AAAA;AACA;AAAA;AAKA;;;AAQA;AACA;AACA;AACA;AACA;;;AAVA;AAAA;AACA;AACA;AACA;AAHA;AAIA;;;AA9BA;AACA;AAsCA;;;;;;;;;;;;;;;;;;;;;ACvEA;;;;;;;;;AAYA;;;;;;;;;;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAVA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;;;;;;;;;;;;;;;;;;;;;;ACZA;;;;;;;;;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAZA;AAcA;AACA;AACA;;;;;;;A","sourceRoot":""}